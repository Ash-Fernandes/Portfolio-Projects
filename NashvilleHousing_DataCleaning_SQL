/*

Cleaning Data in SQL Queries

*/

Select *
FROM DataCleaning_PortfolioProject.dbo.NashvilleHousing

-- Standardize Date Format

Select SaleDate, Convert(Date, SaleDate)  
FROM DataCleaning_PortfolioProject.dbo.NashvilleHousing

Update DataCleaning_PortfolioProject.dbo.NashvilleHousing
SET SaleDate = CONVERT(Date,SaleDate)

Select SaleDate
FROM DataCleaning_PortfolioProject.dbo.NashvilleHousing

-- Populate Property Address Date

Select *
FROM DataCleaning_PortfolioProject.dbo.NashvilleHousing
--where PropertyAddress is null
order by ParcelID

Select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM DataCleaning_PortfolioProject.dbo.NashvilleHousing a
JOIN DataCleaning_PortfolioProject.dbo.NashvilleHousing b
	on a.ParcelID = b.ParcelID
	AND a.UniqueID <> b.UniqueID 
where a.PropertyAddress is null

Update a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM DataCleaning_PortfolioProject.dbo.NashvilleHousing a
JOIN DataCleaning_PortfolioProject.dbo.NashvilleHousing b
	on a.ParcelID = b.ParcelID
	AND a.UniqueID <> b.UniqueID 
where a.PropertyAddress is null

-- Breaking out Address into Individual Columns (Address, City, State)

Select PropertyAddress
FROM DataCleaning_PortfolioProject.dbo.NashvilleHousing
--where PropertyAddress is null
--order by ParcelID

Select
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1) as Address,
	SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress)+1, LEN(PropertyAddress)) as Address
FROM DataCleaning_PortfolioProject.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
ADD PropertySplitAddress nvarchar(255)

Update NashvilleHousing
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress)-1)


ALTER TABLE NashvilleHousing
ADD PropertyCity nvarchar(255)

Update NashvilleHousing
SET PropertyCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress)+1, LEN(PropertyAddress))

Select OwnerAddress
FROM DataCleaning_PortfolioProject.dbo.NashvilleHousing

Select
PARSENAME(REPLACE(OwnerAddress,',','.'),3),
PARSENAME(REPLACE(OwnerAddress,',','.'),2),
PARSENAME(REPLACE(OwnerAddress,',','.'),1)
FROM DataCleaning_PortfolioProject.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
ADD OwnerSplitAddress nvarchar(255)

Update NashvilleHousing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress,',','.'),3)


ALTER TABLE NashvilleHousing
ADD OwnerSplitCity nvarchar(255)

Update NashvilleHousing
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress,',','.'),2)

ALTER TABLE NashvilleHousing
ADD OwnerSplitState nvarchar(255)

Update NashvilleHousing
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress,',','.'),1)

Select *
From DataCleaning_PortfolioProject.dbo.NashvilleHousing

-- Change Y and N in "Sold as Vacant" field

Select Distinct(SoldAsVacantYN), Count(SoldAsVacantYN)
FROM DataCleaning_PortfolioProject.dbo.NashvilleHousing
Group by SoldAsVacantYN
Order by 2

Select SoldAsVacant,
 Case when SoldAsVacant = 1 THEN 'Yes'
	  When SoldAsVacant = 0 THEN 'No'
	  END
From DataCleaning_PortfolioProject.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
ADD SoldAsVacantYN nvarchar(255)

Update NashvilleHousing
SET SoldAsVacantYN = Case when SoldAsVacant = 1 THEN 'Yes'
						When SoldAsVacant = 0 THEN 'No'
						END
SELECT SoldAsVacantYN
FROM DataCleaning_PortfolioProject.dbo.NashvilleHousing

-- Remove Duplicates

WITH RowNumCTE AS (
Select *,
	ROW_NUMBER () OVER(
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 ORDER BY
					UniqueID
					) row_num

From DataCleaning_PortfolioProject.dbo.NashvilleHousing
)
--DELETE 
SELECT *
FROM RowNumCTE
Where row_num > 1
--Order by PropertyAddress

--Delete unused columns

Select * 
FROM DataCleaning_PortfolioProject.dbo.NashvilleHousing

ALTER TABLE DataCleaning_PortfolioProject.dbo.NashvilleHousing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SoldAsVacant
